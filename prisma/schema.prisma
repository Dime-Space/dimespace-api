// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Address {
  id         Int       @id @default(autoincrement())
  cep        String
  state      String
  city       String
  street     String
  number     String
  complement String? 
  created_at DateTime  @default(now())     
  updated_at DateTime  @updatedAt          
  deleted_at DateTime?                     

  users      User[]
  companies  Company[]
}

model Attachment {
  id         Int       @id @default(autoincrement())
  name       String
  file_key   String
  type       String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  project_id Int
  project    Project   @relation(fields: [project_id], references: [id])
}

model Company {
  id            Int       @id @default(autoincrement())
  name          String
  cnpj          String
  phone         String
  image_key     String?
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  deleted_at    DateTime?

  address_id    Int
  user_owner_id Int

  address       Address   @relation(fields: [address_id], references: [id])
  user_owner    User      @relation("OwnedCompanies", fields: [user_owner_id], references: [id])
  users         User[]    @relation("CompanyUsers")
  projects      Project[]
}

model Project {
  id              Int         @id @default(autoincrement())
  title           String
  description     String
  value           String
  final_date      DateTime
  skill_requested String
  status          String
  created_at      DateTime    @default(now())
  updated_at      DateTime    @updatedAt
  deleted_at      DateTime?

  company_id      Int
  user_id         Int?

  company         Company     @relation(fields: [company_id], references: [id])
  user            User?       @relation(fields: [user_id], references: [id])
  attachments     Attachment[]
}

model User {
  id         Int       @id @default(autoincrement())
  name       String
  password   String
  phone      String
  cpf        String
  email      String
  skill      String?
  area       String?
  biography  String?
  credits    Int       @default(0)
  image_key  String?
  birthdate  DateTime
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  address_id Int
  company_id Int?

  address     Address  @relation(fields: [address_id], references: [id])
  company     Company? @relation("CompanyUsers", fields: [company_id], references: [id])
  projects    Project[]
  ownedCompanies Company[] @relation("OwnedCompanies")
}
